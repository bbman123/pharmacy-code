@using Client.Handlers
@using Shared.Enums
@inject IRefererService RefererService
<EditForm Model="@Referer" OnValidSubmit="Save">
    <DataAnnotationsValidator />
    <MudDialog>
        <TitleContent>
            <MudText Typo="Typo.h6">Add Referer</MudText>
        </TitleContent>
        <DialogContent>
            <MudGrid Spacing="1">                
                <MudItem xs="12">
                    <MudSelect T="RefererType" Dense="true" AnchorOrigin="Origin.BottomCenter" Strict="true" Label="Referer Type" @bind-Value="Referer!.Type" Variant="Variant.Outlined">
                        @foreach (RefererType role in Enum.GetValues(typeof(RefererType)))
                        {
                            <MudSelectItem Value="@role">@role</MudSelectItem>
                        }
                    </MudSelect>
                </MudItem>
                <MudItem xs="12">
                    <MudTextField @bind-Value="Referer.RefererName" Label="Referer Name" Variant="Variant.Outlined" For="@(() => Referer.RefererName)"></MudTextField>
                </MudItem>
            </MudGrid>
        </DialogContent>
        <DialogActions>
            <MudButton OnClick="Cancel">Close</MudButton>
            <MudButton Disabled="AppState.IsProcessing" ButtonType="ButtonType.Submit" Variant="Variant.Filled"
                       Color="Color.Primary">@(AppState.IsProcessing ? "Processing" : "Save")</MudButton>
        </DialogActions>
    </MudDialog>
</EditForm>

@code {
    [CascadingParameter] MudDialogInstance? MudDialog { get; set; }
    [Parameter] public Referer Referer { get; set; } = new();
    [Parameter] public bool IsEdit { get; set; } = false;
    [Parameter] public string? RedirectRoute { get; set; } = string.Empty;

    void Cancel() => MudDialog!.Close(DialogResult.Ok(true));
    async Task Save()
    {
        AppState.IsProcessing = true;
        var result = await Dialog.ShowMessageBox("Confirmation",
        $"Do you wish to save", yesText: "Yes", cancelText: "No");
        if (result is null)
        {
            AppState.IsProcessing = false;
            return;
        }
        else if (!result.Value)
        {
            AppState.IsProcessing = false;
            return;
        }
        
        try
        {
            Referer.ModifiedDate = DateTime.Now;
            Referer.RefererName = StringConverter.ConvertToTitleCase(Referer.RefererName!);
            if (!IsEdit)
            {
                Referer.Id = Guid.NewGuid();
                await RefererService.AddReferer(Referer);
            }
            else
            {
                await RefererService.EditReferer(Referer);
            }
            SnackBar.Add("Referer Successfully Saved", Severity.Success);            
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
            SnackBar.Add("Operation failed", Severity.Error);
        }
        finally
        {
            AppState.IsProcessing = false;
            if (!string.IsNullOrEmpty(RedirectRoute))
                Cancel();
            else
                AppState.UpdateLayout();
        }
    }
}